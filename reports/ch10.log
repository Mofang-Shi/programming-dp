Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
range_query_svt(range_queries, adult, 5, 10000, 1)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-15-1fc4648de073>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mrange_query_svt[0m[0;34m([0m[0mrange_queries[0m[0;34m,[0m [0madult[0m[0;34m,[0m [0;36m5[0m[0;34m,[0m [0;36m10000[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m<ipython-input-14-d5f151802f5e>[0m in [0;36mrange_query_svt[0;34m(queries, df, c, T, epsilon)[0m
[1;32m      2[0m     [0;31m# first, run Sparse to get the indices of the "good" queries[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m     [0msparse_epsilon[0m [0;34m=[0m [0mepsilon[0m [0;34m/[0m [0;36m2[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 4[0;31m     [0mindices[0m [0;34m=[0m [0msparse[0m[0;34m([0m[0mqueries[0m[0;34m,[0m [0madult[0m[0;34m,[0m [0mc[0m[0;34m,[0m [0mT[0m[0;34m,[0m [0msparse_epsilon[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      5[0m [0;34m[0m[0m
[1;32m      6[0m     [0;31m# then, run the Laplace mechanism on each "good" query[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-11-363530af13ec>[0m in [0;36msparse[0;34m(queries, df, c, T, epsilon)[0m
[1;32m     14[0m [0;34m[0m[0m
[1;32m     15[0m         [0;31m# otherwise, update pos to point to the rest of the queries[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 16[0;31m         [0mpos[0m [0;34m=[0m [0mnext_idx[0m[0;34m+[0m[0mpos[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     17[0m         [0;31m# update return value to include the index found by AboveThreshold[0m[0;34m[0m[0;34m[0m[0m
[1;32m     18[0m         [0midxs[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mpos[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: unsupported operand type(s) for +: 'NoneType' and 'int'
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'

